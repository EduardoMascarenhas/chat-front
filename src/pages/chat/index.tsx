import Head from 'next/head'
import styles from '@/styles/Home.module.css'
import { io } from 'socket.io-client'
import { useEffect, useState } from 'react';

export default function Chat() {
    const socket = io('http://localhost:3333')
    const [msg, setMsg] = useState<any>('')
    const [roomToJoin, setRoomToJoin] = useState<any>('')
    const [messages, setMessages] = useState<any[]>([])
    const [joined, setJoined] = useState<boolean>(false)
    const [loggedUserName, setLoggedUserName] = useState<string>('')
    const [loggedUserId, setLoggedUserId] = useState<string>('')
    const [loggedUserEmail, setLoggedUserEmail] = useState<string>('')
    const [typingDisplay, setTypingDisplay] = useState<string>('')

    const joinRoom = (e: any) => {
        e.preventDefault()
        socket.emit('joinRoom', {clientName: loggedUserName, clientEmail: loggedUserEmail, clientId: loggedUserId, room: roomToJoin}, () => {
            setJoined(true)
        })
    }

    const sendMessage = (e: any) => {
        e.preventDefault()
        socket.emit('createMessage', {name: loggedUserName, text: msg, room: roomToJoin, clientId: loggedUserId}), () => {
           setMsg('')
        }
    }

    let timeOut;
    const emitTyping = (e: any) => {
        e.preventDefault()
        setMsg(e.target.value)
        socket.emit('typing', {name: loggedUserName, isTyping: true})
        timeOut = setTimeout(()=> {
            socket.emit('typing', {name: loggedUserName, isTyping: false})
        }, 2000)
    }

    const handleChangeName = (e: any) => {
        e.preventDefault()
        setLoggedUserName(e.target.value)
    }
    const handleChangeEmail = (e: any) => {
        e.preventDefault()
        setLoggedUserEmail(e.target.value)
    }

    const handleChangeId = (e: any) => {
        e.preventDefault()
        setLoggedUserId(e.target.value)
    }

    const handleChangeRoom = (e: any) => {
        e.preventDefault()
        setRoomToJoin(e.target.value)
    }

    useEffect(()=> {
        socket.on('connect', function() {
            socket.emit('joinRoom', roomToJoin);
         });
        socket.emit('findAllMessages', {room: roomToJoin}, (response: any) => {
            setMessages(response)
        })

        socket.on('createMessage', () => {
            socket.emit('findAllMessages', {room: roomToJoin}, (response: any) => {
                setMessages(response)
            })
        })

        socket.on('typing', ({name, isTyping}) => {
            if(isTyping) {
                if(name === loggedUserName) {
                    setTypingDisplay('')
                } else {
                    setTypingDisplay(`${name} está digitando...`)
                }
            } else {
                setTypingDisplay('')
            }
        })

        return () => {
            socket.on('disconnect', function() {
                socket.emit('leftRoom', roomToJoin);
             });
          }
    }, [])
  return (
    <>
      <Head>
        <title>Negócio Animal Chat App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.chat}>
        
            <div style={!joined ? { display: 'flex'} : {display: 'none'}}>
                <form onSubmit={joinRoom}>
                    <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center'}}>
                        <h3 style={{marginBottom: '25px'}}>Qual o seu nome?</h3>
                        <p style={{marginBottom: '10px'}}>{loggedUserName}</p>
                        <input style={{marginBottom: '10px'}} type={'text'} name="name" value={loggedUserName} onChange={handleChangeName}/>
                        <h3 style={{marginBottom: '25px'}}>Qual o seu email?</h3>
                        <p style={{marginBottom: '10px'}}>{loggedUserEmail}</p>
                        <input style={{marginBottom: '10px'}} type={'text'} name="name" value={loggedUserEmail} onChange={handleChangeEmail}/>
                        <h3 style={{marginBottom: '25px'}}>Qual o seu id?</h3>
                        <p style={{marginBottom: '10px'}}>{loggedUserId}</p>
                        <input style={{marginBottom: '10px'}} type={'text'} name="name" value={loggedUserId} onChange={handleChangeId}/>
                        <h3 style={{marginBottom: '25px'}}>Qual a room?</h3>
                        <p style={{marginBottom: '10px'}}>{roomToJoin}</p>
                        <input style={{marginBottom: '10px'}} type={'text'} name="room" value={roomToJoin} onChange={handleChangeRoom}/>
                        <button type='submit'>Entrar</button>  
                    </div>
                </form>
            </div>
            <div style={joined ? { display: 'flex'} : {display: 'none'}}>
                
                <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center'}}>
                    <h3 style={{marginBottom: '25px'}}>Logado - {loggedUserName}</h3>
                    <div className={styles.chatLog}>
                        {messages.length > 0 && messages.map((m,i) => {
                            return <div key={i} style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center'}}>
                                <p style={{marginBottom: '5px', color: 'purple'}}>Name: {m.name}</p>
                                <p style={{marginBottom: '5px'}}>Text: {m.text}</p>
                            </div>
                        })}
                        {typingDisplay.length ? <p>{typingDisplay}</p> : <></>}
                    </div>
                    <form onSubmit={sendMessage}>
                        <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center'}}>
                            <label style={{marginBottom: '10px'}}>Digite sua mensagem</label>
                            <input type={'text'} name="msg" value={msg} onChange={emitTyping}/>
                            <button type='submit'>Entrar</button> 
                        </div>
                    </form>
                </div>
            </div>
        </div>
      </main>
    </>
  )
}
